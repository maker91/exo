function map(func, l) {
    r = []
    for i=0, #l-1 {
        r[i] = func(l[i])
    }
    return r
}

function reduce(func, l) {
    init = l[0]
    for i=1, #l-1
        init = func(init, l[i])
    return init
}

function zip(a, b) {
    m = {}
    for i=0, #a-1
	m[a[i]] = b[i]
    return m
}

function reversed(a) {
    r = []
    b = #a-1
    for i=0, b
        r[i] = a[b-i]
    return r
}

function add_one(x) {
    return x+1
}

add = function(a, b) {
    return a+b
}

a = [1, 3, 5, 7, 9]
b = map(add_one, a)
c = zip(a, b)
d = reduce(add, [a, b, reversed(b), reversed(a)])
print(a)
print(b)
print(c)
print(d)

r = reduce(add, a, 0)
print(r)

print(10 * reduce(add, map(function(l) {
    return reduce(add, l)
}, [[1, 1, 1], [2, 2, 2], [3, 3, 3]])))
